---
:project:
  :use_exceptions: FALSE
  :use_test_preprocessor: TRUE
  :use_auxiliary_dependencies: TRUE
  :build_root: build
  :release_build: TRUE
  :test_file_prefix: test_
  :which_ceedling: gem
  :default_task:
    - release

:release_build:
  :output: void_shell
  :use_assembly: FALSE

:environment:

:extension:
  :executable: 

:paths:
  :source:
    - ./demo/**
    - ./source/**
    - ./third_party/printf/*
    - ./third_party/RTT/*

  :libraries: []

:defines:
  # in order to add common defines:
  #  1) remove the trailing [] from the :common: section
  #  2) add entries to the :common: section (e.g. :test: has TEST defined)
  :common: &common_defines
  :test:
    - *common_defines
    - TEST
  :release:
    - *common_defines

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: TRUE
  :plugins:
    - :ignore
    - :callback
  :treat_as:
    uint8:    HEX8
    uint16:   HEX16
    uint32:   UINT32
    int8:     INT8
    bool:     UINT8

# Add -gcov to the plugins list to make sure of the gcov plugin
# You will need to have gcov and gcovr both installed to make it work.
# For more information on these options, see docs in plugins/gcov
:gcov:
  :reports:
    - HtmlDetailed
  :gcovr:
    :html_medium_threshold: 75
    :html_high_threshold: 90

:tools:
  :release_compiler:
    :executable: arm-none-eabi-gcc
    :arguments:
      #- -flto
      - -fno-builtin
      - -fdata-sections
      - -ffunction-sections
      - -nostartfiles
      - -g
      - -mcpu=cortex-m0plus
      - -mtune=cortex-m0plus
      - -mthumb
      - -Wall
      - -Wpedantic
      - -Wextra
      - -std=c99
      - -I"$": COLLECTION_PATHS_SOURCE_AND_INCLUDE
      - -D$: DEFINES_RELEASE
      - -c ${1}
      - -o ${2}
  :release_linker:
    :executable: arm-none-eabi-gcc
    :arguments:
      - --specs=nosys.specs
      - -T ./demo/link.ld
      - -Xlinker 
      - -Map=build/artifacts/release/void_boot.map
      - --no-whole-file
      - -mcpu=cortex-m0plus
      - -mthumb
      - -emain
      - ${1}
      - -o ${2}
  :release_assembler:
    :executable: arm-none-eabi-as
    :arguments:
      - ${1}
      - -o ${2}

# LIBRARIES
# These libraries are automatically injected into the build process. Those specified as
# common will be used in all types of builds. Otherwise, libraries can be injected in just
# tests or releases. These options are MERGED with the options in supplemental yaml files.
:libraries:
  :placement: :end
  :flag: "-l${1}"
  :path_flag: "-L ${1}"
  :system: []    # for example, you might list 'm' to grab the math library
  :test: []
  :release: []

:plugins:
  :load_paths:
    - "#{Ceedling.load_path}"
  :enabled:
    - stdout_pretty_tests_report
    - module_generator
...
